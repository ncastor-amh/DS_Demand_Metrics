# Databricks notebook source
# MAGIC %run ./nb_env_config

# COMMAND ----------

# spark.sql(f"""DROP VIEW IF EXISTS {UNGOV_TABLE}.{OUTREACH_SCHEMA}.vw_ft_lead_event""");

#spark.sql(f"""DROP TABLE IF EXISTS {UNGOV_TABLE}.{OUTREACH_SCHEMA}.ft_lead_event""");

# COMMAND ----------

spark.sql(f"""CREATE TABLE IF NOT EXISTS {UNGOV_TABLE}.{OUTREACH_SCHEMA}.ft_lead_event (
  lead_event_key BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1),
  lead_key BIGINT,
  created_on_dt_key BIGINT,
  property_key BIGINT,
  event_type STRING,
  referral_source STRING,
  favorite_date TIMESTAMP,
  created_on_time TIMESTAMP,
  created_timestamp TIMESTAMP,
  modified_timestamp TIMESTAMP,
  CONSTRAINT `ft_lead_event_pk` PRIMARY KEY (`lead_event_key`),
  CONSTRAINT `fk_lead_event_lead` FOREIGN KEY (`lead_key`) REFERENCES {UNGOV_TABLE}.enr_outreach.dim_lead (`lead_key`),
  CONSTRAINT `fk_lead_event_property` FOREIGN KEY (`property_key`) REFERENCES {GOV_FIN_TABLE}.enr_property.dim_property (`property_key`),
  CONSTRAINT `fk_lead_event_date` FOREIGN KEY (`created_on_dt_key`) REFERENCES {GOV_FIN_TABLE}.enr_finance.dim_date (`Day_key`)
)
USING delta
COMMENT 'Lead event fact table - stores lead property interaction events'
TBLPROPERTIES (
  'delta.columnMapping.mode' = 'name',
  'delta.enableDeletionVectors' = 'true',
  'delta.feature.appendOnly' = 'supported',
  'delta.feature.changeDataFeed' = 'supported',
  'delta.feature.checkConstraints' = 'supported',
  'delta.feature.columnMapping' = 'supported',
  'delta.feature.deletionVectors' = 'supported',
  'delta.feature.generatedColumns' = 'supported',
  'delta.feature.identityColumns' = 'supported',
  'delta.feature.invariants' = 'supported',
  'delta.minReaderVersion' = '3',
  'delta.minWriterVersion' = '7'
)""");

spark.sql(f"""CREATE OR REPLACE VIEW {UNGOV_TABLE}.{OUTREACH_SCHEMA}.vw_ft_lead_event
AS
SELECT
lead_event_key,
lead_key,
created_on_dt_key,
property_key,
event_type,
referral_source,
favorite_date,
created_on_time,
created_timestamp,
modified_timestamp
from dsvc_uat_ungov.enr_outreach.ft_lead_event
""");

# COMMAND ----------

# Sept 24 Backup
# spark.sql(f"""
# INSERT INTO {UNGOV_TABLE}.{OUTREACH_SCHEMA}.ft_lead_event
# (lead_key, created_on_dt_key, property_key, event_type, referral_source, favorite_date, created_on_time, created_timestamp, modified_timestamp)
# WITH property_lead_data AS (
#     SELECT 
#         pp.*,
#         COALESCE(pp.ah4r_leadid, opp.originatingleadid) AS final_leadid,
#         CASE WHEN pp.ah4r_leadid IS NOT NULL THEN 'direct' ELSE 'via_opportunity' END AS association_type,
#         g.region_name
#     FROM {GOV_OTHERS_TABLE}.stg_4operations.stg_4operations_ah4r_prospectproperty pp
#     LEFT JOIN {GOV_OTHERS_TABLE}.stg_4operations.stg_4operations_opportunity opp
#       ON pp.ah4r_opportunityid = opp.id
#     LEFT JOIN {GOV_FIN_TABLE}.enr_property.dim_property p
#       ON p.property_number = pp.ah4r_name           -- property lookup (for region)
#     LEFT JOIN {GOV_FIN_TABLE}.enr_property.dim_geography g
#       ON g.geo_key = p.current_geo_key              -- region lookup
#     WHERE COALESCE(pp.ah4r_leadid, opp.originatingleadid) IS NOT NULL
#       AND pp.createdon >= CASE
#             WHEN g.region_name IN ('Texas','Western')     THEN TIMESTAMP '2023-09-11 00:00:00'
#             WHEN g.region_name = 'Southeast'              THEN TIMESTAMP '2023-10-10 00:00:00'
#             WHEN g.region_name IN ('Midwest','Carolinas') THEN TIMESTAMP '2023-10-23 00:00:00'
#             WHEN g.region_name = 'Florida'                THEN TIMESTAMP '2023-11-07 00:00:00'
#             ELSE TIMESTAMP '2023-08-07 00:00:00'          -- fallback when no property/region
#           END
# )
# SELECT
#     dl.lead_key                                         AS lead_key,
#     COALESCE(dd.day_key, -1)                            AS created_on_dt_key,
#     COALESCE(dp.property_key, -1)                       AS property_key,
#     'Property Interest'                                 AS event_type,
#     COALESCE(pld.ah4r_prospectsourcename, '')           AS referral_source,
#     CAST(COALESCE(pld.ah4r_favoritedate, '1900-01-01 00:00:00') AS TIMESTAMP) AS favorite_date,
#     CAST(COALESCE(pld.createdon,       '1900-01-01 00:00:00') AS TIMESTAMP)   AS created_on_time,
#     current_timestamp()                                  AS created_timestamp,
#     current_timestamp()                                  AS modified_timestamp
# FROM property_lead_data pld
# JOIN {UNGOV_TABLE}.{OUTREACH_SCHEMA}.dim_lead dl
#   ON pld.final_leadid = dl.lead_source_system_id
#  AND dl.lead_source_system = '4ops'                     -- only 4ops leads
# LEFT JOIN {GOV_FIN_TABLE}.cur_property.vw_dim_property dp
#   ON dp.property_number = pld.ah4r_name
# LEFT JOIN {GOV_FIN_TABLE}.enr_finance.dim_date dd
#   ON dd.day_desc = DATE(pld.createdon)
# """)

# COMMAND ----------

spark.sql(f"""
INSERT INTO {UNGOV_TABLE}.{OUTREACH_SCHEMA}.ft_lead_event
(lead_key, created_on_dt_key, property_key, event_type, referral_source, favorite_date, created_on_time, created_timestamp, modified_timestamp)
WITH property_lead_data AS (
    SELECT pp.*, pp.ah4r_leadid AS final_leadid, 'direct' AS association_type, g.region_name
  FROM {GOV_OTHERS_TABLE}.stg_4operations.stg_4operations_ah4r_prospectproperty pp
  LEFT JOIN {GOV_FIN_TABLE}.enr_property.dim_property p ON p.property_number = pp.ah4r_name
  LEFT JOIN {GOV_FIN_TABLE}.enr_property.dim_geography g ON g.geo_key = p.current_geo_key
  WHERE pp.ah4r_leadid IS NOT NULL
    AND pp.createdon >= CASE
            WHEN g.region_name IN ('Texas','Western')     THEN TIMESTAMP '2023-09-11 00:00:00'
            WHEN g.region_name = 'Southeast'              THEN TIMESTAMP '2023-10-10 00:00:00'
            WHEN g.region_name IN ('Midwest','Carolinas') THEN TIMESTAMP '2023-10-23 00:00:00'
            WHEN g.region_name = 'Florida'                THEN TIMESTAMP '2023-11-07 00:00:00'
            ELSE TIMESTAMP '2023-08-07 00:00:00'          -- fallback when no property/region
            END
    UNION ALL
    SELECT pp.*, opp.originatingleadid AS final_leadid, 'via_opportunity' AS association_type, g.region_name
  FROM {GOV_OTHERS_TABLE}.stg_4operations.stg_4operations_ah4r_prospectproperty pp
  JOIN {GOV_OTHERS_TABLE}.stg_4operations.stg_4operations_opportunity opp
    ON pp.ah4r_opportunityid = opp.id
  LEFT JOIN {GOV_FIN_TABLE}.enr_property.dim_property p ON p.property_number = pp.ah4r_name
  LEFT JOIN {GOV_FIN_TABLE}.enr_property.dim_geography g ON g.geo_key = p.current_geo_key
  WHERE pp.ah4r_leadid IS NULL
    AND opp.originatingleadid IS NOT NULL
    AND pp.createdon >= CASE
            WHEN g.region_name IN ('Texas','Western')     THEN TIMESTAMP '2023-09-11 00:00:00'
            WHEN g.region_name = 'Southeast'              THEN TIMESTAMP '2023-10-10 00:00:00'
            WHEN g.region_name IN ('Midwest','Carolinas') THEN TIMESTAMP '2023-10-23 00:00:00'
            WHEN g.region_name = 'Florida'                THEN TIMESTAMP '2023-11-07 00:00:00'
            ELSE TIMESTAMP '2023-08-07 00:00:00'          -- fallback when no property/region
            END
    AND NOT EXISTS (
      SELECT 1
      FROM {GOV_OTHERS_TABLE}.stg_4operations.stg_4operations_ah4r_prospectproperty d
      WHERE d.ah4r_leadid = opp.originatingleadid
        AND d.ah4r_name   = pp.ah4r_name
        AND day(d.createdon)   = day(pp.createdon)
    )
)
SELECT
    dl.lead_key                                         AS lead_key,
    COALESCE(dd.day_key, -1)                            AS created_on_dt_key,
    COALESCE(dp.property_key, -1)                       AS property_key,
    'Property Interest'                                 AS event_type,
    COALESCE(pld.ah4r_prospectsourcename, '')           AS referral_source,
    CAST(COALESCE(pld.ah4r_favoritedate, '1900-01-01 00:00:00') AS TIMESTAMP) AS favorite_date,
    CAST(COALESCE(pld.createdon,       '1900-01-01 00:00:00') AS TIMESTAMP)   AS created_on_time,
    current_timestamp()                                  AS created_timestamp,
    current_timestamp()                                  AS modified_timestamp
FROM property_lead_data pld
JOIN {UNGOV_TABLE}.{OUTREACH_SCHEMA}.dim_lead dl
  ON pld.final_leadid = dl.lead_source_system_id
 AND dl.lead_source_system = '4ops'                     -- only 4ops leads
LEFT JOIN {GOV_FIN_TABLE}.cur_property.vw_dim_property dp
  ON dp.property_number = pld.ah4r_name
LEFT JOIN {GOV_FIN_TABLE}.enr_finance.dim_date dd
  ON dd.day_desc = DATE(pld.createdon)
""")

# COMMAND ----------

#Property Showing:
spark.sql(f"""
INSERT INTO {UNGOV_TABLE}.{OUTREACH_SCHEMA}.ft_lead_event
(lead_key, created_on_dt_key, property_key, event_type, referral_source, favorite_date, created_on_time, created_timestamp, modified_timestamp)
WITH src AS (
  SELECT
      pv.Status,
      pv.Created,
      pv.PropertyNo,
      pv.RequesterId,
      LOWER(TRIM(pv.RequesterEmail)) AS RequesterEmail
  FROM {GOV_OTHERS_TABLE}.stg_cosmos.stg_cosmos_property_viewing pv
  WHERE pv.Status IN (1, 2)              -- 1: Access Code Generated, 2: Scheduled Viewing
    AND pv.Created IS NOT NULL
),
-- Map Status -> human-readable label
labeled AS (
  SELECT
    s.*,
    CASE s.Status
      WHEN 1 THEN 'Access Code Generated'
      WHEN 2 THEN 'Scheduled Viewing'
      ELSE CONCAT('Status ', CAST(s.Status AS STRING))
    END AS status_desc
  FROM src s
),
-- Prefer 4ops match via GlobalId -> LocalSystemValue (given LocalSystemId)
id_map AS (
  SELECT
    l.GlobalId,
    l.LocalSystemValue AS four_ops_id
  FROM {GOV_OTHERS_TABLE}.stg_microsvc.stg_microsvc_globalid_localsystemid l
  WHERE l.LocalSystemId = '91092eb3-df01-4de6-aaaa-12c7627f4dfa'
),
joined AS (
  SELECT
    lbl.*,
    im.four_ops_id
  FROM labeled lbl
  LEFT JOIN id_map im
    ON lbl.RequesterId = im.GlobalId
),
-- Lead resolution:
-- 1) 4ops id match (lead_source_system='4ops' on lead_source_system_id)
-- 2) email match (lowercase comparison)
lead_resolved AS (
  SELECT
    j.*,
    dl4.lead_key      AS lead_key_4ops,
    dle.lead_key      AS lead_key_email
  FROM joined j
  LEFT JOIN {UNGOV_TABLE}.{OUTREACH_SCHEMA}.dim_lead dl4
    ON dl4.lead_source_system = '4ops'
   AND dl4.lead_source_system_id = j.four_ops_id
  LEFT JOIN {UNGOV_TABLE}.{OUTREACH_SCHEMA}.dim_lead dle
    ON LOWER(TRIM(dle.lead_email)) = j.RequesterEmail
),
final_rows AS (
  SELECT
    COALESCE(lead_key_4ops, lead_key_email)                    AS lead_key,
    j.PropertyNo                                               AS property_number,
    j.status_desc                                              AS event_type_label,
    j.Created                                                  AS created_ts
  FROM lead_resolved j
  -- only insert when we can resolve a lead
  WHERE COALESCE(lead_key_4ops, lead_key_email) IS NOT NULL
)
SELECT
    fr.lead_key                                                AS lead_key,
    COALESCE(dd.day_key, -1)                                   AS created_on_dt_key,
    COALESCE(dp.property_key, -1)                              AS property_key,
    fr.event_type_label                                        AS event_type,
    ''                                                         AS referral_source,
    CAST('1900-01-01 00:00:00' AS TIMESTAMP)                   AS favorite_date,
    CAST(fr.created_ts AS TIMESTAMP)                           AS created_on_time,
    current_timestamp()                                         AS created_timestamp,
    current_timestamp()                                         AS modified_timestamp
FROM final_rows fr
LEFT JOIN {GOV_FIN_TABLE}.cur_property.vw_dim_property dp
  ON dp.property_number = fr.property_number
LEFT JOIN {GOV_FIN_TABLE}.enr_finance.dim_date dd
  ON dd.day_desc = DATE(fr.created_ts)
""")

# COMMAND ----------

# ORIG
# spark.sql(f"""
# INSERT INTO {UNGOV_TABLE}.{OUTREACH_SCHEMA}.ft_lead_event
# (lead_key, created_on_dt_key, property_key, event_type, referral_source, favorite_date, created_on_time, created_timestamp, modified_timestamp)
# WITH property_lead_data AS (
#     SELECT 
#         pp.*,
#         COALESCE(pp.ah4r_leadid, opp.originatingleadid) as final_leadid,
#         CASE 
#             WHEN pp.ah4r_leadid IS NOT NULL THEN 'direct'
#             ELSE 'via_opportunity'
#         END as association_type
#     FROM {GOV_OTHERS_TABLE}.stg_4operations.stg_4operations_ah4r_prospectproperty pp
#     LEFT JOIN {GOV_OTHERS_TABLE}.stg_4operations.stg_4operations_opportunity opp
#         ON pp.ah4r_opportunityid = opp.id
#     WHERE COALESCE(pp.ah4r_leadid, opp.originatingleadid) IS NOT NULL
# )
# SELECT
#     dl.lead_key as lead_key,
#     COALESCE(dd.day_key, -1) as created_on_dt_key,
#     COALESCE(dp.property_key, -1) as property_key,
#     'Prospect Property' as event_type,
#     COALESCE(pld.ah4r_prospectsourcename, '') as referral_source,
#     CAST(COALESCE(pld.ah4r_favoritedate, '1900-01-01 00:00:00') AS TIMESTAMP) as favorite_date,
#     CAST(COALESCE(pld.createdon, '1900-01-01 00:00:00') AS TIMESTAMP) as created_on_time,
#     CAST(current_timestamp() AS TIMESTAMP) as created_timestamp,
#     CAST(current_timestamp() AS TIMESTAMP) as modified_timestamp
# FROM property_lead_data pld
# JOIN {UNGOV_TABLE}.{OUTREACH_SCHEMA}.dim_lead dl
#     ON pld.final_leadid = dl.lead_source_system_id
# LEFT JOIN {GOV_FIN_TABLE}.cur_property.vw_dim_property dp
#     ON dp.property_number = pld.ah4r_name
# LEFT JOIN {GOV_FIN_TABLE}.enr_finance.dim_date dd
#     ON dd.day_desc = DATE(pld.createdon)
# """);